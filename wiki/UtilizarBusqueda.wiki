#summary Breve descripción del uso de estrategias de Búsqueda con FAIA, y de la funcionalidad de generación de archivos PDF en una estrategia de Búsqueda. Brief description of the use of search strategies in FAIA.

== Configurar nuestro proyecto para que utilice Búsqueda ==

Para comenzar a utilizar estrategias de Búsqueda simplemente se deben especializar las clases que correspondan, proveídas por el framework FAIA. Para aprender cómo hacerlo, es conveniente observar los ejemplos incluidos.

Vale aclarar aquí una cuestión. Cuando se corre un proyecto que utiliza alguna estrategia de Búsqueda con FAIA, es posible indicarle al framework que genere cierto tipo de salidas sobre la corrida, para poder observar luego el funcionamiento interno del agente, esto es, el árbol de búsqueda generado. FAIA provee dos tipos de salidas:

 * Archivos *XML*, que se almacenan en el directorio "searchTrees" dentro de la carpeta del proyecto.
 * Archivos *PDF*, que muestran de una forma gráfica los árboles generados durante el proceso de búsqueda. Se almacenan en el directorio "pdfLatex" de la carpeta del proyecto. Esta opción utiliza LaTeX. En la página de instrucciones de instalación hay una guía para su instalación en Windows y GNU/Linux.

Para configurar el agente y obtener alguna de estas salidas, se puede utilizar el método _setVisibleTree_ de la clase _Search_. En el ejemplo del Pacman esta opción es seteada en el método _selectAction_ de la clase _!AgentePacman:

{{{
Search busqueda = new Search(estrategiaBusqueda);

// Indica que el árbol de búsqueda debe ser mostrado en formato PDF
busqueda.setVisibleTree(Search.PDF_TREE);
}}}


== Generar archivos PDF en una estrategia de Búsqueda ==

Si se ha configurado FAIA para generar un PDF, entonces la carpeta "pdfLatex" luce de esta forma:

http://faia.googlecode.com/svn/wiki/images/busqueda/carpetaPdflatex.png

En Eclipse por ejemplo, la salida de ejecución será algo parecido a esto:

http://faia.googlecode.com/svn/wiki/images/busqueda/salidaEclipse.png

Los archivos .tex son archivos de LaTeX, y no son importantes. Son eliminados al finalizar la compilación de los mismos a PDF. En el directorio "pdfLatex", como se puede ver en la imagen mostrada antes, sólo se mantienen los archivos PDF.

[http://faia.googlecode.com/svn/wiki/images/busqueda/arbolGenerado.pdf En éste enlace] se puede bajar un archivo PDF de ejemplo. La lectura del mismo debe realizarse de izquierda a derecha, de arriba hacia abajo.

De esta forma, en el PDF de ejemplo, si observamos a la izquierda arriba, veremos un subárbol en el que su nodo padre tiene su "Execution Order" (EO) igual a 0 (o sea, es el primer nodo creado, y el que representa el estado actual del agente). Allí podemos ver que el agente ha aplicado 4 operaciones posibles sobre el mismo (Izquierda, Arriba, Derecha y Abajo), generando 4 nodos más. Observar que el costo del nodo inicial (EO = 0) es 0 (cero), en cambio sus hijos tienen un valor de -1. Esto es así porque se utiliza una estructura tipo lista ordenada para todas las estrategias, y para simular el comportamiento de una pila (que es la estructura que deberíamos utilizar para almacenar los nodos expandidos en "Primero en Profundidad") el costo de los nodos hijos es una unidad menos que el padre.

En el subárbol de la derecha, podemos observar que el nodo padre del mismo es aquel con EO igual a 1. O sea, es el nodo que se ha generado al aplicar el operador Izquierda sobre el nodo 0 (EO = 0). De esta forma entendemos que nuestra estrategia de búsqueda ha escogido ese nodo para expandir en el paso siguiente. Observar que esta vez se aplicaron 3 operadores: Izquierda, Arriba y Abajo.

Luego podemos ver que el agente ha escogido los nodos: 5, 8, 11, 14, 17, 19, 22, etc... terminando su ejecución en el nodo 40, donde ha llegado al objetivo. Por lo tanto, la acción que va a tomar es la que indica el nodo EO = 1: Izquierda.

== Configuring a project to use Search Strategies ==

To begin using simple search strategies, some classes provided by the framework must be specialized. When there is a project that uses a search strategy from FAIA, you can tell the framework to create two kind of outputs, to observe the inner functioning of the agent, such as the search tree generated. FAIA provides two types of outputs:

  * * * XML files that are stored in the directory "searchTrees" within the project folder.
  * * * PDF files, which show a graphical representation of the trees generated during the search process. They are stored in the "pdflatex" folder from the project folder. This option uses LaTeX. On the second page of instructions there is a guide for installation on Windows and GNU/Linux.

To configure an agent and to get some of these output, you can use the method _setVisibleTree_ in the _Search_ class. In the Pacman example, this option is set on the _selectAction_ from the _AgentePacman_class:


{{{
Search busqueda = new Search(estrategiaBusqueda);

// Show search tree in PDF file
busqueda.setVisibleTree(Search.PDF_TREE);
}}}


== Generating PDF files for the Search strategies ==

If FAIA has been set to generate a PDF-tree, the folder "pdfLatex" should look like:

http://faia.googlecode.com/svn/wiki/images/busqueda/carpetaPdflatex.png

In Eclipse, the execution output will look like:

http://faia.googlecode.com/svn/wiki/images/busqueda/salidaEclipse.png

The .tex file are LaTeX files. They are eliminated once their compiling to PDF is finished. The "pdfLatex" folder only contains the resulting PDF files.